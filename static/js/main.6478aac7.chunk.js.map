{"version":3,"sources":["components/add.js","components/item.js","components/workList.js","App.js","reportWebVitals.js","index.js"],"names":["Add","props","state","work","id","name","Math","floor","random","toString","substring","event","preventDefault","this","trim","arr","works","setWorks","localStorage","setItem","JSON","stringify","setState","value","target","s4","status","className","onSubmit","addItem","type","onChange","handleOnChange","required","React","Component","Item","text","edit","class","li","input","defaultValue","onChangeInput","onClick","Done","EditText","Delete","WorkList","newList","filter","item","index","findIndex","x","list","map","Edit","App","todolist","parse","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6478aac7.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Add extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      work: { id: \"\", name: \"\" },\n    };\n  }\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    if (this.state.work.name.trim() !== \"\") {\n      let arr = [...this.props.works, this.state.work];\n      this.props.setWorks(arr);\n      localStorage.setItem(\"todolist\", JSON.stringify(arr));\n      this.setState({\n        work: { id: \"\", name: \"\" },\n      });\n    } else {\n      this.setState({\n        work: { id: \"\", name: \"\" },\n      });\n    }\n  }\n\n  handleOnChange(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      work: {\n        id: this.s4(),\n        name: value,\n        status: false,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"\"}>\n        <form onSubmit={(event) => this.addItem(event)}>\n          <input\n            className={\"border-gray-100\"}\n            type={\"text\"}\n            id={\"add\"}\n            name={\"work\"}\n            value={this.state.work.name}\n            onChange={(event) => this.handleOnChange(event)}\n            required={true}\n          />\n          <button className={\"border-2\"} type=\"submit\">\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Add;\n","import React from \"react\";\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n      text: \"Done\",\n      edit: {\n        text: \"Edit\",\n      },\n      class: {\n        li: \"\",\n        input: \"hidden\",\n      },\n      work: this.props.work.name,\n    };\n  }\n\n  EditText() {\n    // let id = this.props.work.id;\n    // let arr = JSON.parse(localStorage.getItem(\"todolist\"));\n    // let index = arr.findIndex((x) => x.id === id);\n    // this.setState({\n    //   work: arr[index].name,\n    // });\n    // if (this.state.edit.text === \"Edit\") {\n    //   this.setState({\n    //     edit: { text: \"Save\" },\n    //     class: {\n    //       li: \" hidden \",\n    //       input: \"\",\n    //     },\n    //     // work: this.props.work.name,\n    //   });\n    // } else {\n    //   this.setState({\n    //     edit: { text: \"Edit\" },\n    //     class: {\n    //       li: \"\",\n    //       input: \" hidden \",\n    //     },\n    //   });\n    //   if (this.state.work.trim() !== \"\") {\n    //     this.props.Edit(this.state.work);\n    //   }\n    // }\n  }\n\n  onChangeInput(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      work: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"flex justify-between\"}>\n        <div className={\"flex\"}>\n          <li\n          // className={\n          //   `${this.props.work.status ? \"line-through\" : \"\"}` +\n          //   this.state.class.li\n          // }\n          >\n            {this.props.work.name}\n          </li>\n          <input\n            // className={this.state.class.input}\n            type={\"text\"}\n            name={\"work\"}\n            defaultValue={this.state.work}\n            onChange={(event) => this.onChangeInput(event)}\n            required={true}\n          />\n        </div>\n\n        <div className={\"flex\"}>\n          <button\n            type={\"button\"}\n            className={\"border-2\"}\n            onClick={() => this.props.Done()}\n          >\n            {this.state.text}\n          </button>\n\n          {/*Edit*/}\n          <button\n            type={\"button\"}\n            className={\"border-2\"}\n            onClick={() => this.EditText()}\n          >\n            {this.state.edit.text}\n          </button>\n\n          <button\n            type={\"button\"}\n            className={\"border-2\"}\n            onClick={() => this.props.Delete()}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Item;\n","import React from \"react\";\nimport Item from \"./item\";\n\nclass WorkList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: this.props.works,\n    };\n  }\n  Delete(id) {\n    const newList = this.props.works.filter((item) => item.id !== id);\n    this.props.setWorks(newList);\n  }\n\n  Edit(name, id) {\n    let index = this.props.works.findIndex((x) => {\n      return x.id === id;\n    });\n\n    let list = this.props.works;\n    list[index] = {\n      id: id,\n      name: name,\n      status: list[index].status,\n    };\n    this.props.setWorks(list);\n  }\n  Done(id) {\n    let index = this.props.works.findIndex((x) => {\n      return x.id === id;\n    });\n\n    let list = this.props.works;\n    if (list[index].status === false) {\n      list[index] = {\n        id: id,\n        name: list[index].name,\n        status: true,\n      };\n    } else {\n      list[index] = {\n        id: id,\n        name: list[index].name,\n        status: false,\n      };\n    }\n\n    this.props.setWorks(list);\n  }\n\n  render() {\n    return (\n      <div>\n        <ul className={\"\"}>\n          {this.props.works.map((work, index) => {\n            return (\n              <Item\n                key={index}\n                work={work}\n                Delete={() => this.Delete(work.id)}\n                Edit={(name) => this.Edit(name, work.id)}\n                Done={() => this.Done(work.id)}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default WorkList;\n","import React from \"react\";\nimport Add from \"./components/add\";\nimport WorkList from \"./components/workList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.todolist = JSON.parse(localStorage.getItem(\"todolist\"));\n    this.state = {\n      works: this.todolist || [],\n    };\n  }\n\n  setWorks(arr) {\n    localStorage.setItem(\"todolist\", JSON.stringify(arr));\n    this.setState({\n      works: arr,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"  flex justify-center items-center w-screen h-screen\">\n        <div className={\"  w-96 h-96 bg-blue-200 text-center\"}>\n          <div className=\"border\">Todo List</div>\n          <Add\n            works={this.state.works}\n            setWorks={(arr) => this.setWorks(arr)}\n          />\n          <div className={\" overflow-auto w-full h-80\"}>\n            <WorkList\n              works={this.state.works}\n              setWorks={(arr) => this.setWorks(arr)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}